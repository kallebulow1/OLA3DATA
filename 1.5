library(readxl)
library(dplyr)
library(lubridate)


forbtillidindi <- read_excel("data/forbtillid.xlsx")
forv1spørgsmål <- read_excel("data/forv1.xlsx")
forbrug <- read_excel("data/forbrug.xlsx")


forbrug <- forbrug %>%
  mutate(
    realvækst_forbrug = 100 * (forbrug / lag(forbrug, 4) - 1),
    realvækst_P31 = 100 * (`P.31 Husholdningernes forbrugsudgifter` / 
                             lag(`P.31 Husholdningernes forbrugsudgifter`, 4) - 1)
  )

forbrug <- forbrug[-c(1:4), ]


forbrugtillid_kvartal_DST <- forbtillidindi %>%
  mutate(
    # Lav dato ud fra tekst som "1999M01"
    år = as.numeric(substr(måned, 1, 4)),
    måned_num = as.numeric(substr(måned, 6, 7)),
    dato = as.Date(paste0(år, "-", måned_num, "-01")),
    kvartal = paste0(year(dato), "K", quarter(dato))
  ) %>%
  group_by(kvartal) %>%
  summarise(Forbrugertillidsindikatoren = mean(Forbrugertillidsindikatoren, na.rm = TRUE)) %>%
  ungroup()

forbrugtillid_kvartal_DST <- forbrugtillid_kvartal_DST[-c(1:4), ]


forv1spørgsmål_kvartal <- forv1spørgsmål %>%
  mutate(
    år = as.numeric(substr(måned, 1, 4)),
    måned_num = as.numeric(substr(måned, 6, 7)),
    dato = as.Date(paste0(år, "-", måned_num, "-01")),
    kvartal = paste0(year(dato), "K", quarter(dato))
  ) %>%
  group_by(kvartal) %>%
  summarise(across(-c(måned, år, måned_num, dato), \(x) mean(x, na.rm = TRUE))) %>%
  ungroup()


forv1spørgsmål_kvartal <- forv1spørgsmål_kvartal %>%
  mutate(DI_forbtillidindi = rowMeans(across(-kvartal), na.rm = TRUE))

forv1spørgsmål_kvartal <- forv1spørgsmål_kvartal %>%
  select(kvartal, DI_forbtillidindi)

forbtillid_indi_kvartal_DI <- forv1spørgsmål_kvartal %>%
  select(kvartal, DI_forbtillidindi)


library(ggplot2)



# vælg en skaleringsfaktor til linjen (bruges også i sekundær akse)
scale_factor <- 2

# --- DST ---
plotdata_DST <- forbrug %>%
  left_join(forbrugtillid_kvartal_DST, by = "kvartal") %>%
  mutate(kvartal = factor(kvartal, levels = kvartal))

# x-labels: vis K1, hvert 2. år
k1_idx   <- which(grepl("K1$", plotdata_DST$kvartal))
x_breaks <- plotdata_DST$kvartal[k1_idx[seq(1, length(k1_idx), by = 2)]]

ggplot(plotdata_DST, aes(x = kvartal)) +
  geom_col(aes(y = Forbrugertillidsindikatoren), alpha = 0.6) +
  geom_line(aes(y = realvækst_forbrug * scale_factor, group = 1), linewidth = 1) +
  scale_x_discrete(breaks = x_breaks) +
  scale_y_continuous(
    name = "Forbrugertillid (indeks, søjler – gennemsnit af svar)",
    sec.axis = sec_axis(~ . / scale_factor, name = "Realvækst i forbrug (å/å, pct., linje)")
  ) +
  labs(
    title = "Sammenhæng mellem forbrugertillid (DST) og realvækst i forbrug",
    subtitle = "Højere forbrugertillid følges ofte af højere realvækst i forbruget; under kriser falder tilliden og væksten bremses.",
    x = "Kvartal"
  ) +
  theme_minimal(base_size = 13) +
  theme(
    plot.title = element_text(face = "bold"),
    axis.text.x = element_text(margin = margin(t = 4))
  )


# --- DI ---
plotdata_DI <- forbrug %>%
  left_join(forbtillid_indi_kvartal_DI, by = "kvartal") %>%
  mutate(kvartal = factor(kvartal, levels = kvartal))

k1_idx_DI   <- which(grepl("K1$", plotdata_DI$kvartal))
x_breaks_DI <- plotdata_DI$kvartal[k1_idx_DI[seq(1, length(k1_idx_DI), by = 2)]]

ggplot(plotdata_DI, aes(x = kvartal)) +
  geom_col(aes(y = DI_forbtillidindi), alpha = 0.6) +
  geom_line(aes(y = realvækst_forbrug * scale_factor, group = 1), linewidth = 1) +
  scale_x_discrete(breaks = x_breaks_DI) +
  scale_y_continuous(
    name = "Forbrugertillid (DI-indeks, søjler – gennemsnit af 4 spørgsmål)",
    sec.axis = sec_axis(~ . / scale_factor, name = "Realvækst i forbrug (å/å, pct., linje)")
  ) +
  labs(
    title = "DI’s forbrugertillid og realvækst i forbrug",
    subtitle = "DI’s samlede indikator følger konjunkturerne: høj tillid i opsving, lav i nedture – og forbrugets vækst bevæger sig i samme retning.",
    x = "Kvartal"
  ) +
  theme_minimal(base_size = 13) +
  theme(
    plot.title = element_text(face = "bold"),
    axis.text.x = element_text(margin = margin(t = 4))
  )




# Kombinér alt på kvartal
kor_data <- forbrug %>%
  select(kvartal, realvækst_forbrug) %>%
  left_join(forbrugtillid_kvartal_DST, by = "kvartal") %>%
  left_join(forbtillid_indi_kvartal_DI, by = "kvartal")


# fjern rækker med NA'er
kor_data_clean <- na.omit(kor_data)

cor_dst <- cor(kor_data_clean$realvækst_forbrug,
               kor_data_clean$Forbrugertillidsindikatoren)

cor_di <- cor(kor_data_clean$realvækst_forbrug,
              kor_data_clean$DI_forbtillidindi)

cor_dst
cor_di

data.frame(
  Indikator = c("DST forbrugertillid", "DI forbrugertillid"),
  Korrelation_med_realvækst = c(cor_dst, cor_di)
)




forv1MCCI <- read_excel("data/forv1MCCI.xlsx")

forv1MCCI <- forv1MCCI %>%
  mutate(MCCI_måned = rowMeans(across(2:5), na.rm = TRUE))


library(dplyr)

forv1MCCI_kvartal <- forv1MCCI %>%
  mutate(
    aar = as.integer(substr(måneder, 1, 4)),
    m   = as.integer(substr(måneder, 6, 7)),
    k   = ceiling(m / 3),
    kvartal = paste0(aar, "K", k)
  ) %>%
  group_by(aar, k, kvartal) %>%
  summarise(MCCI = mean(MCCI_måned, na.rm = TRUE), .groups = "drop") %>%
  # behold kun ønsket periode
  filter(aar >= 2000, aar < 2025 | (aar == 2025 & k <= 3)) %>%
  select(kvartal, MCCI)


forv1vores_mikro <- read_excel("data/forv1_vores_mikro.xlsx")

library(dplyr)

vores_mikro <- forv1vores_mikro %>%
  mutate(VoresMikro_måned = rowMeans(across(2:7), na.rm = TRUE))



vores_mikro_kvartal <- vores_mikro %>%
  mutate(
    aar = as.integer(substr(måneder, 1, 4)),
    m   = as.integer(substr(måneder, 6, 7)),
    k   = ceiling(m / 3),
    kvartal = paste0(aar, "K", k)
  ) %>%
  group_by(aar, k, kvartal) %>%
  summarise(VoresMikro = mean(VoresMikro_måned, na.rm = TRUE), .groups = "drop") %>%
  filter(aar >= 2000, aar < 2025 | (aar == 2025 & k <= 3)) %>%
  select(kvartal, VoresMikro)


library(dplyr)

samlet <- forbrug %>%
  left_join(forbtillid_indi_kvartal_DI, by = "kvartal") %>%
  left_join(forbrugtillid_kvartal_DST, by = "kvartal") %>%
  left_join(forv1MCCI_kvartal, by = "kvartal") %>%
  left_join(vores_mikro_kvartal, by = "kvartal")



cor_dst   <- cor(samlet$realvækst_forbrug, samlet$Forbrugertillidsindikatoren, use = "complete.obs")
cor_di    <- cor(samlet$realvækst_forbrug, samlet$DI_forbtillidindi, use = "complete.obs")
cor_mcci  <- cor(samlet$realvækst_forbrug, samlet$MCCI, use = "complete.obs")
cor_vores <- cor(samlet$realvækst_forbrug, samlet$VoresMikro, use = "complete.obs")

data.frame(
  Indikator = c("DST", "DI", "MCCI", "VoresMikro"),
  Korrelation_med_realvækst = c(cor_dst, cor_di, cor_mcci, cor_vores)
)

model_DST   <- lm(realvækst_forbrug ~ Forbrugertillidsindikatoren, data = samlet)
model_DI    <- lm(realvækst_forbrug ~ DI_forbtillidindi, data = samlet)
model_MCCI  <- lm(realvækst_forbrug ~ MCCI, data = samlet)
model_Vores <- lm(realvækst_forbrug ~ VoresMikro, data = samlet)

data.frame(
  Indikator = c("DST", "DI", "MCCI", "VoresMikro"),
  R2 = c(
    summary(model_DST)$r.squared,
    summary(model_DI)$r.squared,
    summary(model_MCCI)$r.squared,
    summary(model_Vores)$r.squared
  )
)


library(ggplot2)

ggplot(samlet, aes(x = kvartal)) +
  geom_col(aes(y = MCCI), fill = "steelblue", alpha = 0.5) +
  geom_line(aes(y = realvækst_forbrug), color = "darkred", size = 1) +
  scale_y_continuous(
    name = "MCCI (barer)",
    sec.axis = sec_axis(~., name = "Realvækst i forbrug (%)")
  ) +
  labs(
    title = "MCCI og realvækst i privatforbrug",
    subtitle = "Mikroindikatoren fra 'The quest for the best CCI' sammenlignet med dansk forbrug",
    x = "Kvartal"
  ) +
  theme_minimal(base_size = 13) +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    plot.title = element_text(face = "bold"),
    panel.grid.minor = element_blank()
  )

------------------------------------------------------------
forv1allespg <- read_excel("data/forv1allespg.xlsx")



# 1) Lav kvartal ud fra 'måned'
forv1allespg$kvartal <- paste0(substr(forv1allespg$måned, 1, 4), "K",
                               ceiling(as.numeric(substr(forv1allespg$måned, 6, 7)) / 3))

# 2) Aggreger til kvartal – gennemsnit pr. spørgsmål, NA'er ignoreres
library(dplyr)
forv1allespg_kvartal <- forv1allespg %>%
  group_by(kvartal) %>%
  summarise(across(where(is.numeric), ~mean(.x, na.rm = TRUE)), .groups = "drop")



# Merge på fælles kvartal
data_kor <- merge(forv1allespg_kvartal, samlet[, c("kvartal", "realvækst_forbrug")], by = "kvartal")

spg_cols <- names(data_kor)[2:(ncol(data_kor) - 1)]

best_kor  <- -Inf
best_comb <- NULL

#Gå igennem alle mulige antal spørgsmål – først 1 ad gangen, så 2, 3 … helt op til 12.
#spg_cols er en character vektor med navnene på spørgsmålene
for (i in 1:length(spg_cols)) {
  #Lav alle kombinationer af spørgsmål for det aktuelle antal (i).
  #Fx hvis i = 3, laver den alle grupper på 3 spørgsmål ud af de 12 mulige.
  for (comb in combn(spg_cols, i, simplify = FALSE)) {
    #Hent de kolonner fra datasættet, der hører til den aktuelle kombination af spørgsmål.
    X <- data_kor[, comb, drop = FALSE] 
    
    #Hvis der kun er ét spørgsmål, brug det direkte.
    #Hvis der er flere, tag gennemsnittet (en samlet indikatorværdi pr. kvartal).
    indikator <- if (ncol(X) == 1) X[[1]] else rowMeans(X, na.rm = TRUE)
    
    #Beregn korrelationen (r) mellem indikatoren og realvæksten i forbrug.
    #suppressWarnings() skjuler evt. advarsler om manglende værdier.
    kor <- suppressWarnings(cor(indikator, data_kor$realvækst_forbrug, use = "complete.obs"))
    
    #Hvis korrelationen er større end den hidtil bedste,
    #gemmes den nye korrelation og kombinationen af spørgsmål som den bedste.
    if (!is.na(kor) && kor > best_kor) {
      best_kor  <- kor
      best_comb <- comb
    }
  }
}

cat("Bedste kombination:\n",
    paste(best_comb, collapse = ", "),
    "\nAntal spørgsmål:", length(best_comb),
    "\nKorrelation:", round(best_kor, 3), "\n")


# Beregn R² ud fra korrelationen
r2 <- best_kor^2

cat(" Bedste kombination af spørgsmål\n",
    "----------------------------------\n",
    paste(sprintf("%d) %s", seq_along(best_comb), best_comb), collapse = "\n"),
    "\n----------------------------------\n",
    "Antal spørgsmål:", length(best_comb),
    "\nKorrelation (r):", round(best_kor, 3),
    "\nForklaringsgrad (R²):", round(r2, 3), "\n")

-------------------------------------------------------------
  
forfra

merge <- merge(forv1allespg_kvartal,samlet[, c("kvartal", "realvækst_forbrug")], by="kvartal")

# Tilføj tidsvariabel
forv1allespg_kvartal$t <- 1:nrow(forv1allespg_kvartal)

# Estimér lineær udvikling for spørgsmål 1
model_spg1 <- lm(`Familiens økonomiske situation i dag, sammenlignet med for et år siden` ~ t,
                 data = forv1allespg_kvartal)

summary(model_spg1)


# Tidsvariabel
forv1allespg_kvartal$t <- 1:nrow(forv1allespg_kvartal)

# Lineær model
model_spg2 <- lm(`Familiens økonomiske  situation om et år, sammenlignet med i dag` ~ t,
                 data = forv1allespg_kvartal)

# Udtræk hældning og skæring
a <- coef(model_spg2)[2]
b <- coef(model_spg2)[1]

# Print formel
cat("Formel: y =", round(a, 4), "* x +", round(b, 4), "\n")


names(forv1allespg_kvartal)


## antag: forv1allespg_kvartal har kolonne 1 = 'kvartal', kolonne 2:13 = de 12 spørgsmål
df <- forv1allespg_kvartal

# matrix med de 12 spørgsmål (numerisk)
X <- as.matrix(data.frame(lapply(df[-1], as.numeric)))
qnames <- colnames(X)

# lav en liste med alle kombinationer i rækkefølgen 1,2,...,12
comb_list <- unlist(
  lapply(1:ncol(X), function(k) combn(seq_len(ncol(X)), k, simplify = FALSE)),
  recursive = FALSE
)

# beregn gennemsnit pr. kvartal for hver kombination (rowMeans)
comb_matrix <- sapply(
  comb_list,
  function(idx) rowMeans(X[, idx, drop = FALSE], na.rm = TRUE)
)

# pæne kolonnenavne: "Q1", "Q2" ... for enkeltsprg.; ellers "Q1+Q3", osv.
colnames(comb_matrix) <- sapply(
  comb_list,
  function(idx) {
    if (length(idx) == 1) qnames[idx]
    else paste(qnames[idx], collapse = " + ")
  }
)

# endelig dataframe med kvartal til venstre og alle kombinationskolonner bagefter
alle_kombinationer <- data.frame(kvartal = df$kvartal,
                                 comb_matrix,
                                 check.names = FALSE)

# (valgfrit) slå videnskabelig notation fra i print
options(scipen = 999)

# kig
View(alle_kombinationer)  


# antag at forbrug har kolonnerne 'kvartal' og 'realvækst_forbrug'
alle_kombinationer <- merge(alle_kombinationer,
                            forbrug[, c("kvartal", "realvækst_forbrug")],
                            by = "kvartal",
                            all.x = TRUE)



# --- Beregn udvikling (differencer) ---
df_diff <- alle_kombinationer

# forskel fra forrige kvartal
df_diff[, -1] <- apply(df_diff[, -1], 2, function(x) c(NA, diff(x)))

# fjern første række (den bliver NA efter diff)
df_diff <- df_diff[-1, ]

# --- Kør regressioner på alle kombinationer ---
resultater <- data.frame(
  kombination = character(),
  R2 = numeric(),
  hældning = numeric(),
  stringsAsFactors = FALSE
)

for (col in names(df_diff)[!(names(df_diff) %in% c("kvartal", "realvækst_forbrug"))]) {
  model <- lm(realvækst_forbrug ~ df_diff[[col]], data = df_diff)
  R2 <- summary(model)$r.squared
  slope <- coef(model)[2]
  
  resultater <- rbind(resultater,
                      data.frame(kombination = col,
                                 R2 = R2,
                                 hældning = slope))
}

# sorter efter bedste forklaring
resultater <- resultater[order(-resultater$R2), ]

head(resultater, 10)  # vis top 10 kombinationer


