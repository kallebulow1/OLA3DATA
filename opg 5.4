# opgave 5.4
install.packages(c("httr", "jsonlite", "dplyr", "ggplot2"))
library(httr)
library(jsonlite)
library(dplyr)
library(ggplot2)


# Data for aarhus
api_key="41962073-1223-473e-8520-900e58a24369"
url="https://dmigw.govcloud.dk/v2/metObs/collections/observation/items"

res <- GET(
  url,
  add_headers("X-Gravitee-Api-Key" = api_key),
  query = list(
    stationId = "06074",            # Århus Syd
    parameterId = "wind_dir",       # Wind direction
    datetime = "2023-10-20T00:00:00Z/2023-10-21T23:59:59Z")) # tidsinterval

status_code(res) # tjek om der adgang til api

data <- fromJSON(content(res, "text"), flatten = TRUE) # lave data fra api om til tekst og "flade" det ud så det nemmere at arbejde med

aarhus_df <- data$features %>% # lave om til data frame
  mutate(
    timeStamp = data$timeStamp,
    numberReturned = data$numberReturned,
    type = data$type)

timebasis <- aarhus_df %>%
  mutate (properties.observed = ceiling(row_number() / 6)) %>%   # opdeler i grupper á 6 rækker
  group_by(properties.observed) %>%
  summarise(gennemsnit = mean(properties.value, na.rm = TRUE)) %>%
  ungroup()


aarhus <- ggplot(timebasis, aes(x = properties.observed, y = gennemsnit)) +
  geom_point(color = "steelblue", size = 2) +
  geom_line(color = "darkblue", linewidth = 1) +
  labs(
    title = "Gennemsnit over tid (Århus)",
    x = "Time",
    y = "Gennemsnit af vindretning"
  ) +
  theme_minimal(base_size = 14)


# data for Anholt
res2 <- GET(
  url,
  add_headers("X-Gravitee-Api-Key" = api_key),
  query = list(
    stationId = "06079",            # Anholt
    parameterId = "wind_dir",       # Wind direction
    datetime = "2023-10-20T00:00:00Z/2023-10-21T23:59:59Z")) # tidsinterval

status_code(res) # tjekke om der adgang til api, 200 betyder at der er adgang.

data2 <- fromJSON(content(res2, "text"), flatten = TRUE) # lave data fra api om til tekst og "flade" det ud så det nemmere at arbejde med

anholt_df <- data2$features %>% # lave om til data frame
  mutate(
    timeStamp = data2$timeStamp,
    numberReturned = data2$numberReturned,
    type = data2$type)

timebasis2 <- anholt_df %>%
  mutate (properties.observed = ceiling(row_number() / 6)) %>%   # opdeler i grupper á 6 rækker
  group_by(properties.observed) %>%
  summarise(gennemsnit = mean(properties.value, na.rm = TRUE)) %>%
  ungroup()

anholt <- ggplot(timebasis2, aes(x = properties.observed, y = gennemsnit)) +
  geom_point(color = "red", size = 2) +
  geom_line(color = "darkred", linewidth = 1) +
  labs(
    title = "Gennemsnit over tid (Anholt)",
    x = "Time",
    y = "Gennemsnit af vindretning"
  ) +
  theme_minimal(base_size = 14)


# samlet ggplot for begge grafer
ggplot() +
  geom_line(data = timebasis,
            aes(x = properties.observed, y = gennemsnit, color = "Århus"),
            linewidth = 1) +
  geom_line(data = timebasis2,
            aes(x = properties.observed, y = gennemsnit, color = "Anholt"),
            linewidth = 1) +
  scale_color_manual(values = c("Århus" = "darkblue", "Anholt" = "red")) +
  labs(
    title = "Vindretning under stormflod, oktober 2023",
    x = "Timer",
    y = "Vindretning i grader",
    color = "Lokation"
  ) +
  scale_x_continuous(breaks = seq(0, 48, by = 4)) +     # x-aksen: tal for hver 5. time
  scale_y_continuous(breaks = seq(60, 120, by = 10)) +
  theme_minimal(base_size = 14)

# med nord, syd, øst og vest

ggplot() +
  geom_line(data = timebasis,
            aes(x = properties.observed, y = gennemsnit, color = "Århus"),
            linewidth = 1) +
  geom_line(data = timebasis2,
            aes(x = properties.observed, y = gennemsnit, color = "Anholt"),
            linewidth = 1) +
  #geom_hline(yintercept = 90, color = "black", linetype = "solid", size = 0.5) + 
  scale_color_manual(values = c("Århus" = "darkblue", "Anholt" = "red")) +
  labs(
    title = "Udvikling af vindretning under stormflod, oktober 2023",
    x = "Timer",
    y = "Vindretning",
    color = "Lokation"
  ) +
  scale_x_continuous(breaks = seq(0, 50, by = 4)) +   # x-aksen: tal for hver 5. time
  scale_y_continuous(
    limits = c(45, 136),  # Udvid y-aksen til hele kompasintervallet
    breaks = c(0, 22.5, 45, 67.5, 90, 112.5, 135, 180, 225, 270, 315, 360),
    labels = c("N", "NNØ", "NØ","ØNØ", "Ø","ØSØ", "SØ", "S", "SW", "W", "NW", "N")) +
  theme_minimal(base_size = 14)

